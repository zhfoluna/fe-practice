浏览器缓存
    1、强制缓存
        向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程，强制缓存主要有以下三种
            （1）不存在该缓存结果和缓存标识，强制缓存失效，则向服务器发起请求
            （2）存在该缓存结果和缓存标识，但是结果失效，强制缓存失效，则使用协商缓存。
            （3）存在该缓存结果和缓存标识，且该结果没有失效，强制缓存生效，直接返回该结果。
        强制缓存规则
            浏览器向服务器发送请求的时候，服务器会将缓存规则放入HTTP响应的报文的HTTP头中和请求结果一起返回给浏览器。
            控制强制缓存的字段分别是Expires和Cache-Control,Cache-Control优先级高于Expires。
            Expires 
                原理：是HTTP/1.0控制网页缓存的字段，其值是服务器返回该请求的结果缓存的到期时间，即再次发送请求时，如果客户端的时间小于Expires的值时，直接使用缓存结果。
                缺陷：Expires控制的缓存原理是使用客户端的时间与服务端返回的时间对比，由于客户端不准确，那么强制缓存直接失效。
            Cache-Control
                在HTTP/1.1中，Cache-Control是最重要的规则，主要用于控制网页缓存。主要取值为
                （1）public：所有内容都被缓存（客户端和代理服务器都可缓存）
                （2）private：所有的内容只有客户端可以缓存，默认值
                （3）no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定
                （4）no-store：所有内容都不会被缓存，即不使用强制缓存也不使用协商缓存
                （5）max-age=xxx：缓存内容将在xxx秒后失效
            客户端缓存的位置
                内存缓存（memory cache）       
                    快速读取：内存缓存会将编译解析后的文件，直接存如该进程的内存中，占据该进程的一定内存资源，以方便下次运行时快速读取。
                    时效性：一旦进程关闭，则该进程的内存则会清空。
                硬盘缓存（disk cache）
                    硬盘缓存则是直接将缓存写入硬盘文件中，读取缓存需要对该缓存存放的硬盘进行I/O操作，然后解析该缓存内容，读取复杂，速度比内存慢。
                浏览器会在js和图片等文件解析执行后直接存入内存缓存中，当刷新页面时只需要直接从内存中读取；而css文件则会写入硬盘，每次渲染都需要从硬盘中读取。   
    2、协商缓存
        协商缓存就是在强制缓存失效后，浏览器携带缓存标识想服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程，主要有以下两种情况：
            （1）协商缓存生效，返回304
            （2）协商缓存失败，返回200和请求结果
        协商缓存的标识也是在响应报文的HTTP头中和请求结果一起返回给浏览器的，协商缓存控制的字段分别有Last-Modified/if-Modified-Since 和Etag/if-None-Match
        Etag/if-None-Match的优先级比Last-Modified/if-Modified-Since高
            Last-Modified/if-Modified-Since
                (1)Last-Modified是服务器响应请求时，返回该资源文件在服务器最后被修改的时间
                (2)if-Modified-Since则是客户端再次发起该请求时，携带上次请求返回的Last-Modified值，通过此字段值告诉服务器该资源上次请求返回的最后被修改时间。
                    服务器收到该请求，发现请求头含有if-Modified-Since字段，则会根据if-Modified-Since的字段值与该资源在服务器的最后被修改时间做对比，
                    若服务器的资源最后被修改时间大于if-Modified-Since的字段值，则重新返回资源，状态码为200；否则返回304，代编资源无更新，可继续使用缓存文件。
                缺点：短期内资源发生了改变，Last-Modified并不会发生变化
            Etag/if-None-Match
                （1）Etag是服务器响应请求时，返回当前资源文件的一个唯一标识（服务器生成）
                （2）if-None-Match是客服端再次发起该请求时，携带上次请求返回的唯一标识Etag值，通过此字段值告诉服务器该资源上次请求返回的唯一标识值。
                    服务器收到该请求后，发现该请求头中含有if-None-Match,则会根据if-None-Match的字段值与该资源在服务器的Etag值做对比，一致则返回304，代表资源无更新，
                    继续使用缓存文件；不一致则会重新返回资源文件，状态码为200
    总结：
        强制缓存优先于协商缓存进行，若强制缓存（Expires和Cache-control）生效则直接使用缓存，若不生效则进行协商缓存（Last-Modify/if-Modified-Since 和Etag/if-None-Match）,
        协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，重新获取请求结果，再存入浏览器缓存中，生效则返回304，继续使用缓存。

